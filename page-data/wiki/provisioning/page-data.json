{"componentChunkName":"component---src-pages-markdown-remark-frontmatter-slug-tsx","path":"/wiki/provisioning/","result":{"data":{"site":{"siteMetadata":{"title":"Grafana Infinity Datasource","description":"Do infinite things with Grafana. Turn any website into beautiful grafana dashboards. Supports HTML, CSV, JSON, XML & GraphQL documents.","socialImage":"https://user-images.githubusercontent.com/153843/92741922-03491380-f377-11ea-9c31-9a744afd3388.png","website":"https://yesoreyeram.github.io/grafana-infinity-datasource"}},"markdownRemark":{"html":"<p>If you want to <a href=\"https://grafana.com/docs/grafana/latest/administration/provisioning/#provisioning-grafana\">provision</a> your datasources via grafana provisioning feature, use the following settings</p>\n<h3>Basic Provisioning</h3>\n<p>If you need to provision via file, use the following settings for the basic use cases.</p>\n<deckgo-highlight-code language=\"yaml\" terminal=\"carbon\" theme=\"vscode\"  >\n          <code slot=\"code\">- name: &lt;&lt;YOUR DATASOURCE INSTANCE NAME&gt;&gt;\n  type: yesoreyeram-infinity-datasource\n  access: proxy\n  isDefault: false\n  version: 1\n  jsonData:\n       tlsSkipVerify: false\n  readOnly: true</code>\n        </deckgo-highlight-code>\n<h3>Advanced Provisioning</h3>\n<p>If you need an advanced version of the datasource, use the following format.</p>\n<deckgo-highlight-code language=\"yaml\" terminal=\"carbon\" theme=\"vscode\"  >\n          <code slot=\"code\">- name: &lt;&lt;YOUR DATASOURCE INSTANCE NAME. Example -- Github&gt;&gt;\n  type: yesoreyeram-infinity-datasource\n  access: proxy\n  isDefault: false\n  url: &lt;&lt;YOUR URL. can be empty&gt;&gt;\n  basicAuth: true\n  basicAuthUser: &lt;&lt;YOUR USER NAME. Example -- github_id&gt;&gt;\n  jsonData:\n       tlsSkipVerify: &lt;&lt;true or false&gt;&gt; -- false by default\n       tlsAuth: &lt;&lt;true or false&gt;&gt; -- false by default\n       tlsAuthWithCACert: &lt;&lt;true or false&gt;&gt; -- false by default\n       serverName: &lt;&lt;server name that matches in certificate for tlsAuthWithCACert&gt;&gt;\n       local_sources_options:\n          enabled: &lt;&lt;true or false&gt;&gt; -- false by default \n          allowed_paths:\n               - /etc/path1\n               - /some/other/path\n  secureJsonData:\n       basicAuthPassword: &lt;&lt;YOUR PASSWORD. Example -- MY_Github_PAT_Token&gt;&gt;\n       tlsCACert: &lt;&lt;Your TLS cert&gt;&gt;\n       tlsClientCert: &lt;&lt;Your client certificate&gt;&gt;\n       tlsClientKey: &lt;&lt;Your client key&gt;&gt;\n  version: 1\n  readOnly: true</code>\n        </deckgo-highlight-code>","frontmatter":{"slug":"/wiki/provisioning","title":"Provisioning","previous_page_title":"Configuration","previous_page_slug":"/wiki/configuration","next_page_title":"URL","next_page_slug":"/wiki/url"}}},"pageContext":{"id":"160f1838-721c-53d1-96b9-6400e363a29f","frontmatter__slug":"/wiki/provisioning","__params":{"frontmatter__slug":"wiki"}}},"staticQueryHashes":["1915384699","561970757"]}